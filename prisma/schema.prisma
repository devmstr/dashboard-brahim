generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id       String  @id @default(cuid())
  phone    String  @unique
  fullName String?
  Order    Order[]
}

model Technical {
  id    String  @id @default(cuid())
  brand String?
  model String?
  type  String?
  pas   String?
  nr    Int?
  ec    Int?
  lar1  Int?
  lon   Int?
  lar2  Int?
  Order Order[]
}

model Order {
  id            String     @id
  serialNumber  String?
  status        String?
  quantity      Int?
  receivingDate DateTime?
  startDate     DateTime?
  endDate       DateTime?
  actualEnd     DateTime?
  price         Int?
  deposit       Int?
  remaining     Int?
  progress      Int?
  Client        Client?    @relation(fields: [clientId], references: [id])
  clientId      String?
  Technical     Technical? @relation(fields: [technicalId], references: [id])
  technicalId   String?
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id        String    @id @default(cuid())
  role      String?
  name      String    @unique
  password  String
  image     String?
  accounts  Account[]
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
